<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="LAPTOP711" name="tree.TreeTest" tests="23" errors="0" failures="1" skipped="0" time="0.05" timestamp="2024-11-11T09:57:05">
          <properties>
      <property name="java.specification.version" value="21"/><property name="sun.cpu.isalist" value="amd64"/><property name="sun.jnu.encoding" value="Cp1252"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://adoptium.net/"/><property name="sun.boot.library.path" value="C:\Users\nunezt_admin\AppData\Roaming\Code\User\globalStorage\pleiades.java-extension-pack-jdk\java\21\bin"/><property name="sun.java.command" value="xsbt.boot.Boot test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2024-07-16"/><property name="java.home" value="C:\Users\nunezt_admin\AppData\Roaming\Code\User\globalStorage\pleiades.java-extension-pack-jdk\java\21"/><property name="file.separator" value="\"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="user.script" value=""/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="21.0.4+7-LTS"/><property name="user.name" value="nunezt_admin"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="C:\Users\NUNEZT~1\AppData\Local\Temp\jna--223491640\jna9820238147608348547.dll"/><property name="java.vendor.version" value="Temurin-21.0.4+7"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="C:\Users\NUNEZT~1\AppData\Local\Temp\"/><property name="java.version" value="21.0.4"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="sun.os.patch.level" value=""/><property name="native.encoding" value="Cp1252"/><property name="java.library.path" value="C:\Users\nunezt_admin\AppData\Roaming\Code\User\globalStorage\pleiades.java-extension-pack-jdk\java\21\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\nunezt_admin\AppData\Roaming\Code\User\globalStorage\pleiades.java-extension-pack-jdk\java\21\bin;C:\Users\nunezt_admin\AppData\Roaming\Code\User\globalStorage\pleiades.java-extension-pack-jdk\gradle\latest\bin;C:\Users\nunezt_admin\AppData\Roaming\Code\User\globalStorage\pleiades.java-extension-pack-jdk\maven\latest\bin;C:\Users\nunezt_admin\AppData\Roaming\Code\User\globalStorage\pleiades.java-extension-pack-jdk\java\21\bin;C:\Program Files\OpenLogic\jre-17.0.7.7-hotspot\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Filestar;C:\ProgramData\Filestar\aliases;C:\Program Files\dotnet\;C:\Program Files\OpenLogic\jre-17.0.7.7-hotspot\\bin;C:\Program Files\OpenLogic\jre-17.0.7.7-hotspot\;C:\Program Files\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\apache-maven-3.9.3\bin;C:\msys64\ucrt64\bin;C:\Program Files\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\nodejs\;C:\Users\nunezt_admin\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\nunezt_admin\AppData\Local\Programs\Python\Python312\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\nunezt_admin\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.1.1\bin;C:\Users\nunezt_admin\.dotnet\tools;C:\Users\nunezt_admin\AppData\Local\GitHubDesktop\bin;C:\Users\nunezt_admin\AppData\Local\Programs\Microsoft VS Code\bin;C:\MinGW\bin;C:\Users\nunezt_admin\AppData\Roaming\npm;C:\Users\nunezt_admin\AppData\Roaming\Programs\Zero Install;C:\Users\nunezt_admin\AppData\Local\Coursier\data\bin;C:\Program Files\JetBrains\PyCharm 2024.2.4\bin;."/><property name="stderr.encoding" value="UTF-8"/><property name="java.vendor" value="Eclipse Adoptium"/><property name="scala.ext.dirs" value="C:\Users\nunezt_admin\.sbt\1.0\java9-rt-ext-eclipse_adoptium_21_0_4"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="C:\Users\nunezt_admin\AppData\Local\Coursier\cache\arc\https\github.com\sbt\sbt\releases\download\v1.10.2\sbt-1.10.2.zip\sbt\bin\sbt-launch.jar"/><property name="java.vm.vendor" value="Eclipse Adoptium"/><property name="user.variant" value=""/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Berlin"/><property name="java.vm.specification.version" value="21"/><property name="os.name" value="Windows 10"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="US"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="C:\Users\nunezt_admin"/><property name="user.language" value="en"/><property name="sbt.ipcsocket.tmpdir" value="C:\Users\NUNEZT~1\AppData\Local\Temp\.sbtacce5c2a\ipcsocket"/><property name="swoval.tmpdir" value="C:\Users\NUNEZT~1\AppData\Local\Temp\.sbtacce5c2a\swoval"/><property name="jline.esc.timeout" value="0"/><property name="stdout.encoding" value="UTF-8"/><property name="path.separator" value=";"/><property name="os.version" value="10.0"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/><property name="user.dir" value="D:\GitHub\ProgrammierkonzepteDataMining\BelegListAndTreesAufgabe"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="21.0.4+7-LTS"/><property name="java.class.version" value="65.0"/>
    </properties>
          <testcase classname="tree.TreeTest" name="Tree initialization test" time="0.017">
                      
                    </testcase><testcase classname="tree.TreeTest" name="Tree initialization test apply" time="0.002">
                      
                    </testcase><testcase classname="tree.TreeTest" name="Tree initialization test duplicates" time="0.0">
                      
                    </testcase><testcase classname="tree.TreeTest" name="size of the tree" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="height of the tree" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="contains an element" time="0.0">
                      
                    </testcase><testcase classname="tree.TreeTest" name="not contains an element" time="0.0">
                      
                    </testcase><testcase classname="tree.TreeTest" name="find Successor 0" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="find Successor 1" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="find Successor 2" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="find Successor 3" time="0.0">
                      
                    </testcase><testcase classname="tree.TreeTest" name="find Successor 4" time="0.0">
                      
                    </testcase><testcase classname="tree.TreeTest" name="delete Leaf" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="delete node missing right" time="0.0">
                      
                    </testcase><testcase classname="tree.TreeTest" name="delete node missing left" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="delete middle node" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="delete nothing" time="0.0">
                      
                    </testcase><testcase classname="tree.TreeTest" name="isBinaryTree true" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="isBinaryTree false 1" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="isBinaryTree false 2" time="0.0">
                      
                    </testcase><testcase classname="tree.TreeTest" name="tree2List" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="map x=&gt;x*x" time="0.001">
                      
                    </testcase><testcase classname="tree.TreeTest" name="filter x=&gt;x % 2==0" time="0.019">
                      <failure message="org.scalatest.exceptions.TestFailedException: List(4, 8, 8, 16) did not equal List(4, 8, 16)" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: org.scalatest.exceptions.TestFailedException: List(4, 8, 8, 16) did not equal List(4, 8, 16)
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:476)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:421)
	at org.scalatest.Assertions$.newAssertionFailedException(Assertions.scala:1385)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:1460)
	at tree.TreeTest.testFun$proxy23$1(TreeTest.scala:112)
	at tree.TreeTest.$init$$$anonfun$23(TreeTest.scala:109)
	at org.scalatest.Transformer.apply$$anonfun$1(Transformer.scala:22)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:31)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:21)
	at org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:206)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:138)
	at org.scalatest.funsuite.AnyFunSuite.withFixture(AnyFunSuite.scala:1563)
	at org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:212)
	at org.scalatest.funsuite.AnyFunSuiteLike.runTest$$anonfun$1(AnyFunSuiteLike.scala:216)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:216)
	at org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:47)
	at org.scalatest.funsuite.AnyFunSuite.runTest(AnyFunSuite.scala:1563)
	at org.scalatest.funsuite.AnyFunSuiteLike.runTests$$anonfun$1(AnyFunSuiteLike.scala:249)
	at org.scalatest.SuperEngine.traverseSubNodes$1$$anonfun$1(Engine.scala:413)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	at scala.collection.immutable.List.foreach(List.scala:334)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:429)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)
	at org.scalatest.funsuite.AnyFunSuiteLike.runTests(AnyFunSuiteLike.scala:249)
	at org.scalatest.funsuite.AnyFunSuiteLike.runTests$(AnyFunSuiteLike.scala:47)
	at org.scalatest.funsuite.AnyFunSuite.runTests(AnyFunSuite.scala:1563)
	at org.scalatest.Suite.run(Suite.scala:1114)
	at org.scalatest.Suite.run$(Suite.scala:564)
	at org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1563)
	at org.scalatest.funsuite.AnyFunSuiteLike.run$$anonfun$1(AnyFunSuiteLike.scala:253)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:535)
	at org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:253)
	at org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:47)
	at org.scalatest.funsuite.AnyFunSuite.run(AnyFunSuite.scala:1563)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)
	at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:414)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
</failure>
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>