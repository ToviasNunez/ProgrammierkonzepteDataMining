[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 3 products, 3 sources, 5 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/list/IntTreeTest.scala, ${BASE}/src/test/scala/recursions/ProblemsListsTest.scala, ${BASE}/src/test/scala/tree/TreeTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(tree.implementation.Empty$,ModifiedNames(changes = UsedName(filterHelper,[Default]))), NamesChange(tree.implementation.BinaryTree,ModifiedNames(changes = UsedName(filterHelper,[Default]))), NamesChange(tree.implementation.NonEmpty$,ModifiedNames(changes = UsedName(filterHelper,[Default]))), NamesChange(tree.implementation.BinaryTree$,ModifiedNames(changes = UsedName(filterHelper,[Default]))), NamesChange(tree.implementation.NonEmpty,ModifiedNames(changes = UsedName(filterHelper,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe tree.implementation.Empty$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(filterHelper,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) tree.implementation.Empty$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) tree.implementation.Empty$.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of tree.TreeTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe tree.implementation.BinaryTree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(filterHelper,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) tree.implementation.BinaryTree: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) tree.implementation.BinaryTree.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of tree.TreeTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe tree.implementation.NonEmpty$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(filterHelper,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) tree.implementation.NonEmpty$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) tree.implementation.NonEmpty$.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of tree.TreeTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe tree.implementation.BinaryTree$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(filterHelper,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) tree.implementation.BinaryTree$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) tree.implementation.BinaryTree$.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of tree.TreeTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe tree.implementation.NonEmpty has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(filterHelper,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) tree.implementation.NonEmpty: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) tree.implementation.NonEmpty.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of tree.TreeTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNo changes[0m
