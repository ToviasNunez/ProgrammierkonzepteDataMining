[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\nunezt_admin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\nunezt_admin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (OpenLogic Java 17.0.7)
[debug]       Load.loadUnit: plugins took 108.0303ms
[debug]       Load.loadUnit: defsScala took 0.5959ms
[debug] [Loading] Scanning directory C:\Users\nunezt_admin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nunezt_admin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.8837 ms
[debug]           Load.resolveProject(global-plugins) took 23.9225ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\nunezt_admin\.sbt\1.0\plugins, plugins: List(<none>))) took 56.5585ms
[debug] [Loading] Done in C:\Users\nunezt_admin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 86.7456ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1376ms
[debug]     Load.loadUnit(file:/C:/Users/nunezt_admin/.sbt/1.0/plugins/, ...) took 206.5664ms
[debug]   Load.apply: load took 357.5017ms
[debug]   Load.apply: resolveProjects took 3.625ms
[debug]   Load.apply: finalTransforms took 54.1281ms
[debug]   Load.apply: config.delegates took 11.6565ms
[debug]   Load.apply: Def.make(settings)... took 478.0369ms
[debug]   Load.apply: structureIndex took 124.2124ms
[debug]   Load.apply: mkStreams took 4.9156ms
[info] loading global plugins from C:\Users\nunezt_admin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2069.1563ms
[debug]           Load.loadUnit: plugins took 15.9521ms
[debug]           Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory D:\GitHub\ProgrammierkonzepteDataMining\UdemyScalatoMaster\project
[debug]             Load.loadUnit: mkEval took 3.1258ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\GitHub\ProgrammierkonzepteDataMining\UdemyScalatoMaster\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1767 ms
[info] loading settings for project udemyscalatomaster-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(udemyscalatomaster-build) took 3.8222ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemyscalatomaster-build, base: D:\GitHub\ProgrammierkonzepteDataMining\UdemyScalatoMaster\project, plugins: List(<none>))) took 5.3568ms
[debug] [Loading] Done in D:\GitHub\ProgrammierkonzepteDataMining\UdemyScalatoMaster\project, returning: (udemyscalatomaster-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2092.9459ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.1505ms
[debug]         Load.loadUnit(file:/D:/GitHub/ProgrammierkonzepteDataMining/UdemyScalatoMaster/project/, ...) took 2115.6137ms
[debug]       Load.apply: load took 2116.6836ms
[debug]       Load.apply: resolveProjects took 0.0665ms
[debug]       Load.apply: finalTransforms took 6.9714ms
[debug]       Load.apply: config.delegates took 0.2649ms
[debug]       Load.apply: Def.make(settings)... took 48.1909ms
[debug]       Load.apply: structureIndex took 22.818ms
[debug]       Load.apply: mkStreams took 0.0019ms
[info] loading project definition from D:\GitHub\ProgrammierkonzepteDataMining\UdemyScalatoMaster\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3197.3335ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory D:\GitHub\ProgrammierkonzepteDataMining\UdemyScalatoMaster
[debug]       Load.loadUnit: mkEval took 0.1265ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalafmt.sbt.ScalafmtPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalafmt.sbt.ScalafmtPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.scalafmt.sbt.ScalafmtPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6904 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 172.1658ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\GitHub\ProgrammierkonzepteDataMining\UdemyScalatoMaster, plugins: List(<none>))) took 176.539ms
[debug] [Loading] Done in D:\GitHub\ProgrammierkonzepteDataMining\UdemyScalatoMaster, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1133.5136ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.0647ms
[debug]   Load.loadUnit(file:/D:/GitHub/ProgrammierkonzepteDataMining/UdemyScalatoMaster/, ...) took 4340.5537ms
[debug] Load.apply: load took 4341.6644ms
[debug] Load.apply: resolveProjects took 0.1066ms
[debug] Load.apply: finalTransforms took 21.9775ms
[debug] Load.apply: config.delegates took 0.1733ms
[debug] Load.apply: Def.make(settings)... took 50.9054ms
[debug] Load.apply: structureIndex took 15.7879ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to UdemyScalatoMaster (in build file:/D:/GitHub/ProgrammierkonzepteDataMining/UdemyScalatoMaster/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56144 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56144, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to UdemyScalatoMaster (in build file:/D:/GitHub/ProgrammierkonzepteDataMining/UdemyScalatoMaster/)
[debug] > Exec(idea-shell, None, None)
