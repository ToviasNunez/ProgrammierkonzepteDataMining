[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\nunezt_admin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\nunezt_admin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (OpenLogic Java 17.0.7)
[debug]       Load.loadUnit: plugins took 76.1699ms
[debug]       Load.loadUnit: defsScala took 0.1555ms
[debug] [Loading] Scanning directory C:\Users\nunezt_admin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nunezt_admin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.7438 ms
[debug]           Load.resolveProject(global-plugins) took 23.0711ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\nunezt_admin\.sbt\1.0\plugins, plugins: List(<none>))) took 53.2989ms
[debug] [Loading] Done in C:\Users\nunezt_admin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 69.3272ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1005ms
[debug]     Load.loadUnit(file:/C:/Users/nunezt_admin/.sbt/1.0/plugins/, ...) took 151.8414ms
[debug]   Load.apply: load took 270.7743ms
[debug]   Load.apply: resolveProjects took 3.191ms
[debug]   Load.apply: finalTransforms took 40.0712ms
[debug]   Load.apply: config.delegates took 12.3617ms
[debug]   Load.apply: Def.make(settings)... took 456.6438ms
[debug]   Load.apply: structureIndex took 98.4652ms
[debug]   Load.apply: mkStreams took 4.4727ms
[info] loading global plugins from C:\Users\nunezt_admin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3233.0087ms
[debug]                 Load.loadUnit: plugins took 14.189ms
[debug]                 Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project\project
[debug]                   Load.loadUnit: mkEval took 2.6462ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1154 ms
[info] loading settings for project helloworld-build-build from metals.sbt ...
[debug]                     Load.resolveProject(helloworld-build-build) took 1.8136ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id helloworld-build-build, base: D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project\project, plugins: List(<none>))) took 3.1923ms
[debug] [Loading] Done in D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project\project, returning: (helloworld-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 1546.8408ms
[debug]                 Load.loadUnit: cleanEvalClasses took 4.7028ms
[debug]               Load.loadUnit(file:/D:/GitHub/ProgrammierkonzepteDataMining/HelloWorld/project/project/, ...) took 1566.2116ms
[debug]             Load.apply: load took 1566.8961ms
[debug]             Load.apply: resolveProjects took 0.0697ms
[debug]             Load.apply: finalTransforms took 4.2399ms
[debug]             Load.apply: config.delegates took 0.165ms
[debug]             Load.apply: Def.make(settings)... took 47.0375ms
[debug]             Load.apply: structureIndex took 16.7603ms
[debug]             Load.apply: mkStreams took 0.0018ms
[info] loading project definition from D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 1933.3269ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project
[debug]             Load.loadUnit: mkEval took 0.235ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5159 ms
[info] loading settings for project helloworld-build from metals.sbt,idea.sbt ...
[debug]               Load.resolveProject(helloworld-build) took 65.2214ms
[debug]             Load.loadTransitive: finalizeProject(Project(id helloworld-build, base: D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project, plugins: List(<none>))) took 67.1252ms
[debug] [Loading] Done in D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project, returning: (helloworld-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1072.5543ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.8933ms
[debug]         Load.loadUnit(file:/D:/GitHub/ProgrammierkonzepteDataMining/HelloWorld/project/, ...) took 3012.4156ms
[debug]       Load.apply: load took 3013.2248ms
[debug]       Load.apply: resolveProjects took 0.1027ms
[debug]       Load.apply: finalTransforms took 14.6395ms
[debug]       Load.apply: config.delegates took 0.1972ms
[debug]       Load.apply: Def.make(settings)... took 35.2674ms
[debug]       Load.apply: structureIndex took 16.1671ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[success] Generated .bloop\helloworld-build.json
[success] Total time: 2 s, completed Oct 9, 2024, 10:41:03 AM
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5894.3739ms
[debug]     Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld
[debug]       Load.loadUnit: mkEval took 0.3543ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.0494 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 96.4659ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld, plugins: List(<none>))) took 100.4913ms
[debug] [Loading] Done in D:\GitHub\ProgrammierkonzepteDataMining\HelloWorld, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 787.1852ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.343ms
[debug]   Load.loadUnit(file:/D:/GitHub/ProgrammierkonzepteDataMining/HelloWorld/, ...) took 6692.6319ms
[debug] Load.apply: load took 6693.6094ms
[debug] Load.apply: resolveProjects took 0.065ms
[debug] Load.apply: finalTransforms took 18.2579ms
[debug] Load.apply: config.delegates took 0.1729ms
[debug] Load.apply: Def.make(settings)... took 37.9344ms
[debug] Load.apply: structureIndex took 14.7241ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to HelloWorld (in build file:/D:/GitHub/ProgrammierkonzepteDataMining/HelloWorld/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64391 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64391, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to HelloWorld (in build file:/D:/GitHub/ProgrammierkonzepteDataMining/HelloWorld/)
[debug] > Exec(idea-shell, None, None)
